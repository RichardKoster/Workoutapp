package com.richardkoster.workoutapp;

import java.io.InputStream;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.Timer;
import java.util.TimerTask;

import android.app.Activity;
import android.app.Dialog;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothSocket;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class DeviceListActivity extends Activity {
	
	private static final int REQUEST_ENABLE_BT = 1;
	static ArrayList<BluetoothDevice> foundDevices;
	private Context ctx;
	private Timer interval;
	public Runnable searchForDevices;
	ListView deviceLV;
	BroadcastReceiver mReceiver;
	BluetoothAdapter adapter;
	boolean connected = false;
	private BluetoothSocket sock;
    private InputStream in;	

	@Override
	public void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		
		this.setContentView(R.layout.activity_device_list);
		
		TextView headerTV = (TextView)findViewById(R.id.header_textview);
		
		headerTV.setText(R.string.searchfordevicetitle);
		
		deviceLV = (ListView)findViewById(R.id.deviceListView);
		
		deviceLV.setDivider(null);
		
		deviceLV.addHeaderView(new View(this));
		
		deviceLV.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parentGroup, View view, int position,
					long id) {
				unregisterReceiver(mReceiver);

				Intent intent = new Intent(DeviceListActivity.this, DuringActivity.class);
				startActivity(intent);
			}
		});
		
		foundDevices = new ArrayList<BluetoothDevice>();
		
		adapter = BluetoothAdapter.getDefaultAdapter();
		
		
		
		if(adapter == null){
			Toast.makeText(this, "Device does not support bluetooth", Toast.LENGTH_SHORT).show();
		}
		else if (!adapter.isEnabled()) {
			Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
		    startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);
		}
		else{
			Log.d("+++Bluetooth", "enabled");
			if(adapter.getBondedDevices().size() >0){
				Intent intent1 = new Intent(DeviceListActivity.this, DuringActivity.class);
				startActivity(intent1);
			}else{
				adapter.startDiscovery();
				search();
			}
			
			
		}
		
		
	}
	
	public void search(){
		
		mReceiver = new BroadcastReceiver() {
			
			@Override
			public void onReceive(Context context, Intent intent) {
				// TODO Auto-generated method stub
				//get action from the intent generated by broadcastreceiver
				String action = intent.getAction();
				
				//check if action is equal to new device found
				if(action.equals(BluetoothDevice.ACTION_FOUND)){
					Log.d("+++Receiver", "Found");
					BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
					
					if(device.getName().equals("OLIMEX MOD-BT")){
						adapter.cancelDiscovery();
						if(foundDevices.contains(device)==false){
							foundDevices.add(device);
						}
						if(foundDevices != null){
							Log.d("+++Receiver", "to listview");
							deviceLV.setAdapter(getDeviceAdapter());
						}
						
						
					}
					
					
				}
				
				if(action.equals(BluetoothAdapter.ACTION_DISCOVERY_FINISHED)){
					adapter.startDiscovery();
				}
			}
		};
		
		IntentFilter deviceFound = new IntentFilter(BluetoothDevice.ACTION_FOUND);
		registerReceiver(mReceiver, deviceFound);
	}
	
	public DeviceListAdapter getDeviceAdapter(){
		DeviceListAdapter deviceAdapter = new DeviceListAdapter(this, foundDevices);
		return deviceAdapter;
	}

}
